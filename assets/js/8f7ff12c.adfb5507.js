"use strict";(self.webpackChunklaravel_in_action=self.webpackChunklaravel_in_action||[]).push([[3384],{1470:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var t=o(4848),a=o(8453);const i={sidebar_position:11},l="Integrating MongoDB with Laravel",r={id:"Integrating-MongoDB-with-Laravel",title:"Integrating MongoDB with Laravel",description:"MongoDB is a popular NoSQL database that is known for its flexibility and scalability. In this guide, we will explore how to integrate MongoDB with a Laravel application.",source:"@site/docs/Integrating-MongoDB-with-Laravel.md",sourceDirName:".",slug:"/Integrating-MongoDB-with-Laravel",permalink:"/laravel-in-action/docs/Integrating-MongoDB-with-Laravel",draft:!1,unlisted:!1,editUrl:"https://github.com/HMZElidrissi/laravel-in-action/blob/main/docs/Integrating-MongoDB-with-Laravel.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Deploying a Laravel Application on AWS EC2 using Laravel Sail with Docker",permalink:"/laravel-in-action/docs/Deploying-Laravel"}},s={},d=[{value:"Step 1: Install MongoDB",id:"step-1-install-mongodb",level:2},{value:"Step 2: Install the MongoDB PHP Driver",id:"step-2-install-the-mongodb-php-driver",level:2},{value:"Step 3: Add Laravel MongoDB Package to Your Project Dependencies",id:"step-3-add-laravel-mongodb-package-to-your-project-dependencies",level:2},{value:"Step 4: Create a MongoDB Deployment",id:"step-4-create-a-mongodb-deployment",level:2},{value:"Step 5: Save your credentials",id:"step-5-save-your-credentials",level:2},{value:"Step 6: Create a Connection String",id:"step-6-create-a-connection-string",level:2},{value:"Step 7: Configure Your MongoDB Connection",id:"step-7-configure-your-mongodb-connection",level:2},{value:"Step 8: Edit the model to use Laravel MongoDB",id:"step-8-edit-the-model-to-use-laravel-mongodb",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"integrating-mongodb-with-laravel",children:"Integrating MongoDB with Laravel"}),"\n",(0,t.jsx)(n.p,{children:"MongoDB is a popular NoSQL database that is known for its flexibility and scalability. In this guide, we will explore how to integrate MongoDB with a Laravel application."}),"\n",(0,t.jsx)(n.h2,{id:"step-1-install-mongodb",children:"Step 1: Install MongoDB"}),"\n",(0,t.jsxs)(n.p,{children:["To install MongoDB on your system, follow the official installation guide for your operating system. You can find the installation instructions for various platforms ",(0,t.jsx)(n.a,{href:"https://docs.mongodb.com/manual/administration/install-community/",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"step-2-install-the-mongodb-php-driver",children:"Step 2: Install the MongoDB PHP Driver"}),"\n",(0,t.jsx)(n.p,{children:"To interact with MongoDB from your Laravel application, you need to install the MongoDB PHP driver. You can install the driver using the following command:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pecl install mongodb\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Once the installation is complete, you need to add the following line to your ",(0,t.jsx)(n.code,{children:"php.ini"})," file to enable the MongoDB extension:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"extension=mongodb.so\n"})}),"\n",(0,t.jsx)(n.h2,{id:"step-3-add-laravel-mongodb-package-to-your-project-dependencies",children:"Step 3: Add Laravel MongoDB Package to Your Project Dependencies"}),"\n",(0,t.jsx)(n.p,{children:"Run the following command to add the Laravel MongoDB dependency to your application:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"composer require mongodb/laravel-mongodb:^4.2\n"})}),"\n",(0,t.jsx)(n.h2,{id:"step-4-create-a-mongodb-deployment",children:"Step 4: Create a MongoDB Deployment"}),"\n",(0,t.jsx)(n.p,{children:"You can create a MongoDB deployment using a cloud-based service like MongoDB Atlas or deploy MongoDB on your local machine. Follow the instructions provided by the MongoDB documentation to set up your MongoDB deployment."}),"\n",(0,t.jsx)(n.h2,{id:"step-5-save-your-credentials",children:"Step 5: Save your credentials"}),"\n",(0,t.jsx)(n.p,{children:"After you create your database user, save that user's username and password to a safe location for use in an upcoming step."}),"\n",(0,t.jsx)(n.h2,{id:"step-6-create-a-connection-string",children:"Step 6: Create a Connection String"}),"\n",(0,t.jsx)(n.p,{children:"Create a connection string that includes the username, password, and other connection details for your MongoDB deployment. The connection string should look like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"mongodb://username:password@hostname:port/database\n"})}),"\n",(0,t.jsx)(n.p,{children:"Replace the placeholders with your actual credentials and connection details."}),"\n",(0,t.jsx)(n.h2,{id:"step-7-configure-your-mongodb-connection",children:"Step 7: Configure Your MongoDB Connection"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Set the connection string in the database configuration file (",(0,t.jsx)(n.code,{children:"config/database.php"}),") of your Laravel application. Add the following configuration to the ",(0,t.jsx)(n.code,{children:"connections"})," array:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"'connections' => [\n    // highlight-start\n  'mongodb' => [\n    'driver' => 'mongodb',\n    'dsn' => env('DB_URI', '<connection string>'),\n    'database' => 'test_database',\n  ],\n    // highlight-end\n\n// ...\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Set the default database connection in the same file:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"'default' => env('DB_CONNECTION', 'mongodb'),\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsxs)(n.li,{children:["Add the Laravel MongoDB provider to the list of service providers in the ",(0,t.jsx)(n.code,{children:"config/app.php"})," file:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",children:"'providers' => [\n    // highlight-start\n    MongoDB\\Laravel\\MongoDBServiceProvider::class,\n    // highlight-end\n    // ...\n"})}),"\n",(0,t.jsx)(n.h2,{id:"step-8-edit-the-model-to-use-laravel-mongodb",children:"Step 8: Edit the model to use Laravel MongoDB"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Replace the ",(0,t.jsx)(n.code,{children:"use Illuminate\\Database\\Eloquent\\Model;"})," with ",(0,t.jsx)(n.code,{children:"use MongoDB\\Laravel\\Eloquent\\Model;"})," in your model file."]}),"\n",(0,t.jsxs)(n.li,{children:["Specify mongodb in the ",(0,t.jsx)(n.code,{children:"$connection"})," field."]}),"\n",(0,t.jsxs)(n.li,{children:["In the User model, replace ",(0,t.jsx)(n.code,{children:"use Illuminate\\Foundation\\Auth\\User as Authenticatable;"})," with ",(0,t.jsx)(n.code,{children:"use MongoDB\\Laravel\\Auth\\User as Authenticatable;"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-php",metastring:'title="app/Models/Movie.php"',children:"<?php\nnamespace App\\Models;\nuse MongoDB\\Laravel\\Eloquent\\Model;\nclass Movie extends Model\n{\n    protected $connection = 'mongodb';\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>l,x:()=>r});var t=o(6540);const a={},i=t.createContext(a);function l(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);