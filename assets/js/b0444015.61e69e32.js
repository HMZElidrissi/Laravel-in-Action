"use strict";(self.webpackChunklaravel_in_action=self.webpackChunklaravel_in_action||[]).push([[291],{4500:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var s=n(4848),i=n(8453);const r={sidebar_position:2},o="Structure of the Framework",a={id:"Understanding-the-Laravel-Ecosystem/Structure-of-the-Framework",title:"Structure of the Framework",description:"- The app directory contains the core application code, including console commands, exception handlers, HTTP-related classes (controllers, middleware, requests, and resources), and models.",source:"@site/docs/Understanding-the-Laravel-Ecosystem/Structure-of-the-Framework.md",sourceDirName:"Understanding-the-Laravel-Ecosystem",slug:"/Understanding-the-Laravel-Ecosystem/Structure-of-the-Framework",permalink:"/Laravel-in-Action/docs/Understanding-the-Laravel-Ecosystem/Structure-of-the-Framework",draft:!1,unlisted:!1,editUrl:"https://github.com/HMZElidrissi/Laravel-in-Action/blob/main/docs/Understanding-the-Laravel-Ecosystem/Structure-of-the-Framework.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"MVC Pattern",permalink:"/Laravel-in-Action/docs/Understanding-the-Laravel-Ecosystem/MVC-Pattern"},next:{title:"Request Lifecycle",permalink:"/Laravel-in-Action/docs/Understanding-the-Laravel-Ecosystem/Request-Lifecycle"}},c={},d=[];function l(e){const t={code:"code",h1:"h1",li:"li",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"structure-of-the-framework",children:"Structure of the Framework"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"app"})," directory contains the core application code, including console commands, exception handlers, HTTP-related classes (controllers, middleware, requests, and resources), and models."]}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"bootstrap"})," directory contains the bootstrap files responsible for bootstrapping the Laravel application."]}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"config"})," directory contains configuration files for various aspects of the application, such as database connections, caching, session management, etc."]}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"database"})," directory houses files related to the database, including factories for generating dummy data, migrations for managing database schema changes, and seeders for populating the database with initial data."]}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"public"})," directory serves as the document root for the application. It contains the front controller (",(0,s.jsx)(t.code,{children:"index.php"}),") and publicly accessible assets like CSS, JavaScript, and image files."]}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"resources"})," directory holds non-PHP resources, including JavaScript files, CSS stylesheets, and views (Blade templates) used for rendering HTML."]}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"routes"})," directory contains route definitions that map URLs to corresponding controllers and actions."]}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"storage"})," directory is used for storing various types of data generated by the application, such as uploaded files, cached data, logs, etc."]}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"tests"})," directory houses the application's automated tests. These tests are essential for ensuring the quality and stability of your code."]}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"vendor"})," directory contains the dependencies installed via Composer. Composer is a dependency management tool for PHP that helps you declare and manage the libraries your project depends on."]}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:".env"})," file stores environment-specific configuration settings. This file is typically ignored by version control systems (like Git) to avoid committing sensitive information."]}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"artisan"})," file is the command-line interface for interacting with the Laravel application. You can use Artisan to perform various tasks, such as generating boilerplate code, running migrations, and scheduling commands."]}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"composer.json"})," file defines the project's dependencies and provides metadata about the application. This file is essential for managing your project's dependencies using Composer."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(6540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);